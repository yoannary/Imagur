@model ImgurCloneAuth.Models.AddPhotoViewModel

@{
    ViewBag.Title = "Create";
}

<div class="container d-flex justify-content-center mt-3 mb-2">
    <div>
        <h2 class="mb-2">Upload an image for sharing</h2>
        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", id = "image-upload" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal mt-3">
                <h4>Add Photo</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <span class="text-danger">
                    @ViewBag.Error
                </span>

                <div class="form-group" style=" width: 400px; ">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
                <div id="myDropzone" class="dropzone mt-3">
                    <div class="dz-message">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-card-image" viewBox="0 0 16 16">
                            <path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z" />
                            <path d="M1.5 2A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13zm13 1a.5.5 0 0 1 .5.5v6l-3.775-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12v.54A.505.505 0 0 1 1 12.5v-9a.5.5 0 0 1 .5-.5h13z" />
                        </svg>
                        <span>Drag and drop an image here or click to upload</span>
                    </div>
                </div>
                @Html.HiddenFor(model => model.Image, new { @id = "Image" })

                <div class="form-group">
                    <div class="mt-3">
                        <input type="submit" value="Add the photo" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }
    </div>

</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    // Initialize Dropzone
    let uploadedFiles = 0;
    Dropzone.autoDiscover = false;
    var myDropzone = new Dropzone("#myDropzone", {
        url: "/Photo/Upload", // Set the URL where the files should be uploaded
        maxFilesize: 5, // Set the maximum file size in MB
        maxFiles: 1,
        thumbnailWidth: 250,
        thumbnailHeight: 250,
        acceptedFiles: ".jpg, .jpeg, .png", // Specify the allowed file extensions
        addRemoveLinks: false, // Display remove links for uploaded files
        dictDefaultMessage: "Drop files here or click to upload", // Set the default message
        success: function (response) {
            document.getElementById("Image").value = JSON.parse(response.xhr.response).name;
            this.disable();
        }
    });

    myDropzone.on("addedfile", file => {
        myDropzone.clickable = false
    });
</script>

<style>
    input{
        width: 100% !important;
        max-width: unset;
    }
</style>